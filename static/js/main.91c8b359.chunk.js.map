{"version":3,"sources":["solveHanoi.js","App.js","serviceWorker.js","index.js"],"names":["solveHanoi","num","_solveHanoi","from","mid","to","ans","push","createTowers","h","n","Array","map","_","i","move","blocks","pop","Block","value","props","className","style","width","Bottom","index","HanoiTower","height","reduce","acc","l","length","xs","x","key","y","idx","Solutions","cursor","App","useState","setBlocks","setCursor","solution","setSolution","onKeyDown","e","keyCode","Number","target","blks","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91c8b359.chunk.js","sourcesContent":["function _solveHanoi(num, from, mid, to) {\n  if (num === 0) {\n    return [];\n  }\n\n  const ans = [];\n  ans.push(..._solveHanoi(num - 1, from, to, mid));\n  ans.push({ num, from, to });\n  ans.push(..._solveHanoi(num - 1, mid, from, to));\n  return ans;\n}\n\nfunction solveHanoi(num) {\n  return _solveHanoi(num, 1, 2, 3);\n}\n\nexport default solveHanoi;\n","import React, { useState } from \"react\";\nimport solveHanoi from \"./solveHanoi\";\nimport \"./App.css\";\n\nfunction createTower(n) {\n  return [...Array(n)].map((_, i) => n - i);\n}\n\nfunction createTowers(h) {\n  return [createTower(h), [], []];\n}\n\nfunction move(blocks, from, to) {\n  blocks[to].push(blocks[from].pop());\n  return [...blocks];\n}\n\nfunction Block({ value, ...props }) {\n  return (\n    <div\n      {...props}\n      className=\"hanoi-block\"\n      style={{ width: `${value * 3}vw` }}\n    ></div>\n  );\n}\n\nfunction Bottom({ index, ...props }) {\n  return (\n    <>\n      <div className=\"hanoi-bottom\"></div>\n      <div className=\"hanoi-desc\">{index}</div>\n    </>\n  );\n}\n\nfunction HanoiTower({ blocks, ...props }) {\n  const height = blocks.reduce((acc, l) => acc + l.length, 0);\n  const xs = [...Array(blocks.length)].map((_, x) => {\n    const h = blocks[x].length;\n    return (\n      <div key={x} className=\"hanoi-block-container\">\n        {[...Array(height)].map((_, y) => {\n          const idx = height - y - 1;\n          return <Block key={idx} value={idx < h ? blocks[x][idx] : 0} />;\n        })}\n        <Bottom index={x + 1} />\n      </div>\n    );\n  });\n  return <div className=\"hanoi-container\">{xs}</div>;\n}\n\nfunction Solutions({ value, cursor, ...props }) {\n  return (\n    <div {...props}>\n      {value.map(({ num, from, to }, i) => (\n        <div\n          key={i}\n          className={i === cursor ? \"sol-highlight\" : \"sol-normal\"}\n        >{`${num} : ${from} --> ${to}`}</div>\n      ))}\n    </div>\n  );\n}\n\nfunction App() {\n  const initialBlockNum = 3;\n  const [blocks, setBlocks] = useState(createTowers(initialBlockNum));\n  const [cursor, setCursor] = useState(0);\n  const [solution, setSolution] = useState(solveHanoi(initialBlockNum));\n\n  const handleInputNum = e => {\n    if (e.keyCode === 13) {\n      const num = Number(e.target.value);\n      if (num > 0 && num < 11) {\n        const blks = createTowers(num);\n        setBlocks(blks);\n        setCursor(0);\n        setSolution(solveHanoi(num));\n      }\n      e.target.value = \"\";\n    }\n  };\n\n  const handleLeft = e => {\n    if (cursor > 0) {\n      const { from, to } = solution[cursor - 1];\n      setBlocks(move(blocks, to - 1, from - 1));\n      setCursor(cursor - 1);\n    }\n  };\n  const handleRight = e => {\n    if (cursor < solution.length) {\n      const { from, to } = solution[cursor];\n      setBlocks(move(blocks, from - 1, to - 1));\n      setCursor(cursor + 1);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">Tower of Hanoi</div>\n      <div className=\"App-body\">\n        <HanoiTower blocks={blocks} />\n      </div>\n      <div className=\"App-tail\">\n        <div>\n          Height : <input onKeyDown={handleInputNum} />\n        </div>\n        <div>\n          {`Move `}\n          <button onClick={handleLeft}>{\"<\"}</button>\n          <button onClick={handleRight}>{\">\"}</button>\n        </div>\n        <Solutions value={solution} cursor={cursor} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}